image: php:8.2

stages:
  - test
  - deploy

# ğŸ§ª Tests - S'exÃ©cute sur toutes les branches
test:
  stage: test
  tags:
    - back
  before_script:
    # VÃ©rifier que PHP et Composer sont disponibles
    - php --version
    - composer --version || (echo "Composer non trouvÃ©, installation..." && curl -sS https://getcomposer.org/installer | php && sudo mv composer.phar /usr/local/bin/composer)
    
    # Installation des dÃ©pendances PHP (ignorer les extensions manquantes)
    - composer install --prefer-dist --no-interaction --no-dev --ignore-platform-reqs --no-scripts
    
    # GÃ©nÃ©rer l'autoload sans exÃ©cuter les scripts Laravel
    - composer dump-autoload --optimize --no-dev
    
    # Configuration de l'environnement de test
    - cp .env.testing .env
    - php artisan key:generate --force
    
  script:
    - echo "ğŸ§ª Lancement des tests..."
    # CrÃ©er le dossier de logs si nÃ©cessaire
    - mkdir -p storage/logs
    - php artisan test --verbose
    - echo "âœ… Tests terminÃ©s"
    
  artifacts:
    when: always
    reports:
      junit: storage/logs/junit.xml
    paths:
      - storage/logs/
    expire_in: 1 week

# ğŸš€ DÃ©ploiement - Seulement sur main et aprÃ¨s succÃ¨s des tests
deploy:
  stage: deploy
  tags:
    - back
  dependencies:
    - test
  script:
    - echo "ğŸšš DÃ©ploiement du back..."
    - sudo rm -rf /home/flowadmin/back/*
    - sudo cp -r . /home/flowadmin/back/
    - echo "ğŸ”ƒ RedÃ©marrage de Nginx et PHP..."
    - sudo docker compose -f /home/flowadmin/docker-compose.yml restart nginx
    - echo "âœ… DÃ©ploiement terminÃ©"
  only:
    - main
  needs:
    - test

